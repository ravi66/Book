@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components;
@using MudBlazor;
@using Book.Services;
@using Book.Dialogs;

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0" Dense="true" >
        <MudIconButton OnClick="@ToggleDrawer" Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" aria-label="menu" />
        <MudSpacer />
        <MudButton OnClick="AddTransaction" StartIcon="@Icons.Material.Filled.AddCircleOutline" Color="Color.Inherit" Variant="Variant.Outlined" >New Entry</MudButton>
        <MudSpacer />
        <MudIconButton Href="info" Icon="@Icons.Material.Filled.Info" Color="Color.Inherit" aria-label="more information" />
    </MudAppBar>
    <MudDrawer @bind-Open="@drawerOpen" Variant="DrawerVariant.Responsive" Elevation="0">
        <MudDrawerHeader Dense="true" >
            <MudStack AlignItems="AlignItems.Center" Row="true" >
                <MudIconButton OnClick="@ToggleDrawer" Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" aria-label="menu" />
                <MudText Typo="Typo.h6">@BookName</MudText>
            </MudStack>
        </MudDrawerHeader>
        <MudNavMenu>
            <MudNavLink Href="/" Icon="@Icons.Material.Filled.Home" Match="NavLinkMatch.All" >Summary</MudNavLink>
            <MudNavLink Href="SummaryTypeList" Icon="@Icons.Material.Filled.Summarize" >Types</MudNavLink>
            <MudNavLink Href="BookSettings" Icon="@Icons.Material.Filled.Settings" >Settings</MudNavLink>
            <MudNavLink Href="Database" Icon="@Icons.Material.Filled.Storage" >Database</MudNavLink>
            <MudNavLink OnClick="ToggleThemeMode" Icon="@themeIcon" >@themeIconText</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pa-1" >
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code
{
    [Inject] public BookSettingSvc BookSettingSvc { get; set; }

    [Inject] public IDialogService DialogService { get; set; }

    [Inject] public BookDbMigratorSvc DbMigrator { get; set; }

    private bool _isDarkMode = true;
    private string themeIcon = Icons.Material.Filled.LightMode;
    private string themeIconText = "Light Mode";

    private string BookName = "Book";

    private MudThemeProvider _mudThemeProvider;

    private bool drawerOpen = false;

    protected async override Task OnInitializedAsync()
    {
        await DbMigrator.EnsureDbCreated();

        BookName = await BookSettingSvc.GetBookName();
        _isDarkMode = await BookSettingSvc.GetDarkMode();

        SetTheme();
    }

    void ToggleDrawer()
    {
        drawerOpen = !drawerOpen;
    }

    private async void ToggleThemeMode()
    {
        _isDarkMode = !_isDarkMode;

        SetTheme();

        await BookSettingSvc.SetDarkMode(_isDarkMode);
    }

    private async Task AddTransaction()
    {
        var parameters = new DialogParameters<TransactionDialog>();
        parameters.Add(x => x.SavedTransactionId, 0);

        DialogService.Show<TransactionDialog>("New Entry", parameters);
    }

    private void SetTheme()
    {
        themeIcon = _isDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode;
        themeIconText = _isDarkMode ? "Light Mode" : "Dark Mode";
    }

}