@inherits LayoutComponentBase
@implements IDisposable

<MudThemeProvider @bind-IsDarkMode="@isDarkMode" Theme="bookTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <BookAppBar />
    <MudDrawer @bind-Open="@drawerOpen" Anchor="Anchor.Start" Elevation="1" Variant="@DrawerVariant.Mini" ClipMode="DrawerClipMode.Always" OpenMiniOnHover="true" >
        <MudNavMenu>
            <MudNavLink Href="SummaryTypeList" Icon="@Icons.Material.Filled.Summarize" IconColor="Color.Info"><MudText Color="Color.Info">@Localizer["Types"]</MudText></MudNavLink>
            <MudNavLink Href="Database" Icon="@SvgIcons.Database" IconColor="Color.Info"><MudText Color="Color.Info">@Localizer["Database"]</MudText></MudNavLink>
            <MudNavLink Href="BookSettings" Icon="@Icons.Material.Filled.Settings" IconColor="Color.Info"><MudText Color="Color.Info">@Localizer["Settings"]</MudText></MudNavLink>
            <MudNavLink Href="Info" Icon="@Icons.Material.Filled.Info" IconColor="Color.Info"><MudText Color="Color.Info">@Localizer["About"]</MudText></MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="pa-1" >
            <MudScrollToTop>
                <MudFab StartIcon="@Icons.Material.Filled.ArrowCircleUp" />
            </MudScrollToTop>
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code
{
    [Inject] internal IBookSettingSvc BookSettingSvc { get; set; } = default!;

    [Inject] public IBookDbMigratorSvc DbMigrator { get; set; } = default!;

    [Inject] public INotifierSvc NotifierSvc { get; set; } = default!;

    MudTheme bookTheme = new MudTheme()
        {
            LayoutProperties = new LayoutProperties()
            {
                AppbarHeight = "48px"
            }
        };

    bool drawerOpen = false;

    bool isDarkMode = true;

    protected async override Task OnInitializedAsync()
    {
        await DbMigrator.EnsureDbCreated();

        isDarkMode = await BookSettingSvc.GetDarkMode();

        NotifierSvc.ThemeChanged += ThemeChanged;
    }

    void ThemeChanged(object? sender, bool darkMode)
    {
        isDarkMode = darkMode;
        StateHasChanged();
    }

    public void Dispose()
    {
        NotifierSvc.ThemeChanged -= ThemeChanged;
        GC.SuppressFinalize(this);
    }
}