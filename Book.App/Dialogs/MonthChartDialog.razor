@using ApexCharts;

<MudDialog @rendermode="RenderMode.InteractiveWebAssembly" Gutters="false" ContentClass="pa-2" >
    <DialogContent>
        <ApexChart TItem="Transaction" Options="ChartOptions" @ref="ApexChart" Title="@DialogTitle" OnDataPointSelection="OnDataPointSelection" FormatYAxisLabel="GetYAxisLabel">
            @if (!ShowEntryTypes)
            {
                <ApexPointSeries TItem="Transaction" Items="Transactions" XValue="@(t => t.SummaryName)" Name="Value" SeriesType="SeriesType.Pie" YAggregate="@(t => t.Sum(t => t.Value))" OrderByDescending="t => t.Y" ShowDataLabels />
            }
            else
            {
                <ApexPointSeries TItem="Transaction" Items="Transactions" XValue="@(t => t.TransactionTypeName)" Name="Value" SeriesType="SeriesType.Pie" YAggregate="@(t => t.Sum(t => t.Value))" OrderByDescending="t => t.Y" ShowDataLabels />
            }
        </ApexChart>
    </DialogContent>
</MudDialog>

@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Inject] internal IBookSettingSvc BookSettingSvc { get; set; }

    [Parameter] public List<Transaction> Transactions { get; set; }

    [Parameter] public string DialogTitle { get; set; }

    ApexChartOptions<Transaction> ChartOptions;

    ApexChart<Transaction> ApexChart;

    bool ShowEntryTypes = false;

    protected async override Task OnInitializedAsync()
    {
        MudDialog.Options.NoHeader = true;
        MudDialog.Options.FullWidth = true;
        MudDialog.SetOptions(MudDialog.Options);

        ChartOptions = new ApexChartOptions<Transaction>();
        ChartOptions.Theme = new Theme { Mode = await BookSettingSvc.GetDarkMode() ? Mode.Dark : Mode.Light, Palette = null };
        ChartOptions.Chart = new Chart { Toolbar = new Toolbar { Show = true } };
        ChartOptions.Legend = new Legend { Position = LegendPosition.Bottom, FontSize = "14px" };
        ChartOptions.DataLabels = new DataLabels { Style = new DataLabelsStyle { FontSize = "12px" }, };
        ChartOptions.NoData = new NoData { Text = @Localizer["NoPieData"], Style = new NoDataStyle { FontSize = "24px" } };
        ChartOptions.Title = new Title { Style = new TitleStyle { FontSize = "18px" } };
        ChartOptions.Colors = GetColours();
    }

    List<string> GetColours()
    {
        if (!ShowEntryTypes)
        {
            return Transactions.GroupBy(t => t.SummaryTypeId)
                .Select(g => new { Value = g.Sum(t => t.Value), Colour = g.Select(c => c.SummaryColour).FirstOrDefault() ?? Utils.RandomColour() })
                .OrderByDescending(o => o.Value).ToList()
                .Select(o => o.Colour).ToList();
        }
        else
        {
            return Transactions.GroupBy(t => t.TransactionTypeId)
                .Select(g => new { Value = g.Sum(t => t.Value), Colour = g.Select(c => c.TypeColour).FirstOrDefault() ?? Utils.RandomColour() })
                .OrderByDescending(o => o.Value).ToList()
                .Select(o => o.Colour).ToList();
        }
    }

    async void OnDataPointSelection(SelectedData<Transaction> data)
    {
        ShowEntryTypes = !ShowEntryTypes;
        ChartOptions.Colors = GetColours();
        await ApexChart.UpdateOptionsAsync(true, true, false);
    }

    string GetYAxisLabel(decimal value) => value.ToString("C2");
}