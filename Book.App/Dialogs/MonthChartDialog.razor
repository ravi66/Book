@using ApexCharts;

<MudDialog @rendermode="RenderMode.InteractiveWebAssembly" Class="d-flex " Style="width:100%;" DisableSidePadding="true" >
    <DialogContent>
        <MudPaper Style="min-width:320px; max-height:500px; " Elevation="5" Class="flex-grow-1">
            @if (Transactions.Any())
            {
                <ApexChart TItem="Transaction" Options="ChartOptions" @ref="ApexChart" Title="@DialogTitle" OnDataPointSelection="OnDataPointSelection">
                    @if (!ShowEntryTypes)
                    {
                        <ApexPointSeries XValue="@(e => e.SummaryName)" TItem="Transaction" Items="Transactions" Name="Value" SeriesType="SeriesType.Pie" YAggregate="@(e => e.Sum(e => e.Value))" OrderByDescending="e=>e.Y" ShowDataLabels />
                    }
                    else
                    {
                        <ApexPointSeries XValue="@(e => e.TransactionTypeName)" TItem="Transaction" Items="Transactions" Name="Value" SeriesType="SeriesType.Pie" YAggregate="@(e => e.Sum(e => e.Value))" OrderByDescending="e=>e.Y" ShowDataLabels />
                    }
                </ApexChart>
            }
            else
            {
                <MudText Class="py-4" Align="MudBlazor.Align.Center" Typo="Typo.h5">@DialogTitle</MudText>
                <MudText Class="py-4" Align="MudBlazor.Align.Center" Typo="Typo.h5">@Localizer["NoPieData"]</MudText>
            }
        </MudPaper>
    </DialogContent>
</MudDialog>

@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Inject] internal IBookSettingSvc BookSettingSvc { get; set; }

    [Parameter] public List<Transaction> Transactions { get; set; }

    [Parameter] public string DialogTitle { get; set; }

    private ApexChartOptions<Transaction> ChartOptions;

    private ApexChart<Transaction> ApexChart;

    public int SelectedOption { get; set; } = 1;

    private bool ShowEntryTypes = false;

    protected async override Task OnInitializedAsync()
    {
        MudDialog.Options.NoHeader = true;
        MudDialog.SetOptions(MudDialog.Options);

        ChartOptions = new ApexChartOptions<Transaction>();
        ChartOptions.Theme = new Theme { Mode = await BookSettingSvc.GetDarkMode() ? Mode.Dark : Mode.Light, Palette = null };
        ChartOptions.Colors = Constants.ApexColours;
        ChartOptions.Chart = new Chart { Toolbar = new Toolbar { Show = true } };
        ChartOptions.Legend = new Legend { Position = LegendPosition.Bottom, FontSize = "14px" };
        ChartOptions.DataLabels = new DataLabels { Style = new DataLabelsStyle { FontSize = "12px" }, };
        ChartOptions.NoData = new NoData { Text = @Localizer["NoPieData"] };
        ChartOptions.Tooltip = new ApexCharts.Tooltip { Y = new TooltipY { Formatter = @$"function(value, opts) {{ if (value === undefined) {{return '';}} return Intl.NumberFormat(undefined, {{ style: 'currency', currency: '{RegionInfo.CurrentRegion.ISOCurrencySymbol}' }} ).format(value);}}" } };
    }

    private void OnDataPointSelection(SelectedData<Transaction> data)
    {
        ShowEntryTypes = !ShowEntryTypes;
        ApexChart.ResetSeriesAsync(true, true);
        ApexChart.UpdateSeriesAsync();
        ApexChart.RenderAsync();
    }
}