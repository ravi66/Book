<MudIconButton Variant="@Variant" Size="@Size" Icon="@Icons.Material.Filled.Delete" Color="Color.Secondary" OnClick="Delete" title="@Localizer["DeleteEntryType"]"/>

@code
{
    [Parameter] public TransactionType TransactionType { get; set; } = default!;

    [Parameter] public Variant Variant { get; set; } = default!;

    [Parameter] public Size Size { get; set; }

    [Inject] public IDialogService DialogService { get; set; } = default!;

    [Inject] internal ITransactionTypeRepository Repo { get; set; } = default!;

    [Inject] public INotifierSvc NotifierSvc { get; set; } = default!;

    async Task Delete()
    {
        var dialog = DialogService.Show<ConfirmDialog>("", new DialogParameters<ConfirmDialog>
                {
                    { x => x.AcceptLabel, Localizer["DeleteTTypeAccLabel", TransactionType.Name] },
                    { x => x.AcceptColour, Color.Error },
                    { x => x.AcceptToolTip, Localizer["DeleteEntryType"] },
                    { x => x.CancelColour, Color.Success },
                    { x => x.CancelLabel, Localizer["No"] },
                });

        DialogResult dialogResult = await dialog.Result ?? default!;
        if (!dialogResult.Canceled)
        {
            await Repo.DeleteTransactionType(TransactionType.TransactionTypeId);
            NotifierSvc.OnTransactionTypeDeleted(this, TransactionType.SummaryTypeId);
        }
    }
}