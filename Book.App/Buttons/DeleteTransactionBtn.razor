<MudIconButton Variant="@Variant" Size="@Size" Icon="@Icons.Material.Filled.Delete" Color="Color.Secondary" OnClick="DeleteTransaction" Title="@Localizer["DeleteEntry"]"/>

@code
{
    [Parameter] public Transaction Transaction { get; set; }

    [Parameter] public Variant Variant { get; set; }

    [Parameter] public Size Size { get; set; }

    [Inject] public IDialogService DialogService { get; set; }

    [Inject] internal ITransactionRepository Repo { get; set; }

    [Inject] public INotifierSvc NotifierSvc { get; set; }

    async Task DeleteTransaction()
    {
        var dialog = DialogService.Show<ConfirmDialog>("", new DialogParameters<ConfirmDialog>
                {
                    { x => x.AcceptLabel, Localizer["DeleteTransAccLabel", Transaction.TransactionTypeName, Transaction.Value.ToString("C2")] },
                    { x => x.AcceptColour, Color.Error },
                    { x => x.AcceptToolTip, Localizer["DeleteEntry"] },
                    { x => x.CancelColour, Color.Success },
                    { x => x.CancelLabel, Localizer["No"] },
                });

        if (!(await dialog.Result).Canceled && Transaction.TransactionId != 0)
        {
            await Repo.DeleteTransaction(Transaction.TransactionId);

            NotifierSvc.OnTransactionsChanged(this, [Transaction.TransactionDate.Year], 0);
        }
    }
}